 Visualisation Functions
Code:
import requests
import matplotlib.pyplot as plt
from datetime import datetime

# Step 1: Get live weather data from wttr.in for Perth
url = "https://wttr.in/Perth?format=j1"
response = requests.get(url)
data = response.json()

# Step 2: Extract temperature data for today
times = []
temps = []
feels_like = []

for hour_data in data['weather'][0]['hourly']:
    time_str = hour_data['time'].zfill(4)  # e.g., "0" -> "0000"
    dt = datetime.strptime(data['weather'][0]['date'] + ' ' + time_str, '%Y-%m-%d %H%M')
    temp = float(hour_data['tempC'])
    feels = float(hour_data['FeelsLikeC'])

    times.append(dt)
    temps.append(temp)
    feels_like.append(feels)

# Step 3: Plot the data
plt.figure(figsize=(12, 5))
plt.plot(times, temps, label='Temperature (°C)', color='red', marker='o')
plt.plot(times, feels_like, label='Feels Like (°C)', color='blue', linestyle='--', marker='x')

plt.title('Live Weather Forecast for Today - Perth')
plt.xlabel('Time')
plt.ylabel('Temperature (°C)')
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()




Tool: ChatGPT
Date: 23-05-2025


Me: How do I get live weather data for Perth from wttr.in?
AI: You can use the following URL: `https://wttr.in/Perth?format=j1`. It returns weather data in JSON format.

Me: How do I fetch it using Python?
AI: Use the `requests` module:
```python
import requests
url = "https://wttr.in/Perth?format=j1"
response = requests.get(url)
data = response.json()


Me: How do I extract the hourly temperature for today?
AI: Use data['weather'][0]['hourly'] to access today’s hourly data. Then loop through each hour.

Me: How do I format the time?
AI: Pad the time string to 4 digits and use datetime.strptime():

time_str = hour['time'].zfill(4)
dt = datetime.strptime(data['weather'][0]['date'] + ' ' + time_str, '%Y-%m-%d %H%M')


Me: What about converting temperature values?
AI: Use float() to convert strings:

temp = float(hour['tempC'])
feels_like = float(hour['FeelsLikeC']).

Me: How can I visualize temperature and feels-like temperature over time?
AI: Use matplotlib.pyplot to create a line chart.

Me: Can I show both values on the same graph?
AI: Yes, plot both series with different styles:

plt.plot(times, temps, label='Temperature (°C)', color='red', marker='o')
plt.plot(times, feels_like, label='Feels Like (°C)', color='blue', linestyle='--', marker='x')

Me: How do I make the plot clearer?
AI: Add title, grid, labels, legend, and use tight_layout():

plt.title('Live Weather Forecast for Today - Perth')
plt.xlabel('Time')
plt.ylabel('Temperature (°C)')
plt.grid(True)
plt.legend()
plt.tight_layout().


Me: Why use zfill(4) for the time?
AI: Because the API may return "0" for midnight. Padding makes it "0000" for datetime parsing.

Me: Can I sort the data by time automatically?
AI: Yes, since your datetime objects are created correctly, just use them as x-values in your plot — matplotlib will plot them in order.

Me: Will the x-axis show times correctly?
AI: Yes, matplotlib automatically formats datetime objects as x-axis labels.

Me: How do I label the x-axis with readable time like "06:00", "12:00"?
AI: You can format x-axis ticks with matplotlib.dates:

import matplotlib.dates as mdates
plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%H:%M'))


Me: Should I rotate the x-axis labels?
AI: Yes, use plt.xticks(rotation=45) to make the labels readable.

Me: Can I save the plot?
AI: Yes, use plt.savefig("weather_plot.png") before plt.show().








